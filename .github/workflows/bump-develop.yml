# Nome do Workflow
name: 'CI: Bump Version & Update Jira (Develop)'

# Gatilho (Trigger)
on:
  pull_request:
    types:
      - closed
    branches:
      - develop

jobs:
  release-and-notify:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # ... os passos 1, 2, 3 e 4 (Checkout, Get Tag, Determine Version, Push Tag) continuam EXATAMENTE os mesmos ...

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --match "v*.*.*-develop" --abbrev=0 || git describe --tags --match "v*.*.*" --abbrev=0 || echo "v0.0.0-develop")
          echo "current_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Determine Next Version
        id: next_version
        run: |
          CURRENT_TAG=${{ steps.get_tag.outputs.current_tag }}
          VERSION_NUMBER=$(echo $CURRENT_TAG | sed 's/^v//' | sed 's/-.*$//')
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION_NUMBER"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="v$MAJOR.$MINOR.$NEXT_PATCH-develop"
          echo "new_tag=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Create and Push New Tag
        run: |
          NEW_TAG=${{ steps.next_version.outputs.new_tag }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $NEW_TAG -m "Auto-bumped version to $NEW_TAG on develop merge"
          git push origin $NEW_TAG

      # --- NOVOS PASSOS PARA O JIRA ---

      - name: Find Jira Issue Keys in Commits
        id: find_jira_keys
        run: |
          # Pega a tag anterior para limitar a busca de commits
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ steps.next_version.outputs.new_tag }}^)
          echo "Buscando commits entre $PREVIOUS_TAG e ${{ steps.next_version.outputs.new_tag }}"
          # Encontra todas as chaves de issue (ex: ATF-123) nos commits
          ISSUE_KEYS=$(git log --pretty=format:%s $PREVIOUS_TAG..${{ steps.next_version.outputs.new_tag }} | grep -o -E '[A-Z]+-[0-9]+' | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "Chaves encontradas: $ISSUE_KEYS"
          echo "keys=$ISSUE_KEYS" >> $GITHUB_OUTPUT

      - name: Add Comment to Jira Issues
        # Só executa se encontrou alguma chave
        if: steps.find_jira_keys.outputs.keys != ''
        uses: atlassian/gajira-comment@v3
        with:
          issues: ${{ steps.find_jira_keys.outputs.keys }}
          comment: '✅ Entregue na versão de desenvolvimento ${{ steps.next_version.outputs.new_tag }}'
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}